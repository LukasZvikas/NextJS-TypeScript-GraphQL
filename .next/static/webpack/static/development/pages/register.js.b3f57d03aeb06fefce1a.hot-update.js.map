{"version":3,"file":"static/webpack/static/development/pages/register.js.b3f57d03aeb06fefce1a.hot-update.js","sources":["webpack:///./components/AuthRender.tsx"],"sourcesContent":["import { Component, FormEvent } from 'react';\nimport { InjectedProps, AuthType } from '../types/authTypes';\n\ninterface AuthState {\n    auth: AuthType;\n    errorMessage?: string;\n}\n\ninterface AuthProps {\n    user?: {\n        email: string;\n        _id: string;\n    };\n    data?: any;\n    children(props: InjectedProps): JSX.Element;\n}\n\nclass AuthRender extends Component<AuthProps, AuthState> {\n    state = {\n        auth: {},\n        errorMessage: ''\n    };\n\n    handleSubmit(\n        {\n            auth,\n            mutate,\n            validateInputs,\n            setErrorMessage\n        }: {\n            auth: AuthType;\n            mutate: any;\n            validateInputs: (auth: AuthType) => string | null,\n            setErrorMessage: (message: string) => void\n        },\n        event: FormEvent<EventTarget>\n    ) {\n        event.preventDefault();\n        console.log('auth is this', auth)\n\n        const isInvalidInputs = validateInputs(auth);\n\n        if (isInvalidInputs) {\n            setErrorMessage(isInvalidInputs);\n            return;\n        }\n\n        console.log('auth is this', auth)\n\n        mutate({ variables: { ...auth } });\n    }\n\n    setErrorMessage(message: string): void {\n        this.setState({ errorMessage: message });\n    }\n\n    clearErrorMessage() {\n        this.setState({ errorMessage: '' });\n    }\n\n    onInputChange(errorMessage: string, { target }: any): void {\n        if (errorMessage) {\n            this.clearErrorMessage();\n        }\n        this.setState({\n            auth: {\n                ...this.state.auth,\n                [target.name]: target.value\n            }\n        });\n    }\n\n    render() {\n        const { errorMessage, auth } = this.state;\n        console.log('error', this.state)\n        return this.props.children({\n            auth,\n            handleSubmit: this.handleSubmit,\n            onInputChange: this.onInputChange.bind(this, errorMessage),\n            errorMessage,\n            setErrorMessage: this.setErrorMessage.bind(this)\n        });\n    }\n}\n\nexport default AuthRender;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAgBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAgBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAMA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;AAjEA;AACA;AAmEA;;;;A","sourceRoot":""}