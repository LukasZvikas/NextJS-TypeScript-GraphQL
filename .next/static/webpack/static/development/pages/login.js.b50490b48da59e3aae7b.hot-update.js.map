{"version":3,"file":"static/webpack/static/development/pages/login.js.b50490b48da59e3aae7b.hot-update.js","sources":["webpack:///./pages/login.tsx"],"sourcesContent":["import React, { Component, ChangeEvent } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { LOGIN_MUTATION } from '../graphql/auth/login';\nimport { Mutation } from 'react-apollo';\nimport { UNFILLED_FIELDS_ERROR } from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\nimport AuthRender from '../components/AuthRender';\nimport Router from 'next/router';\nimport { withAuthPages } from '../components/withAuthPages';\nimport { InjectedProps } from '../types/authTypes';\n\nclass Login extends Component<InjectedProps, {}> {\n    validateInputs(\n        { email, password }: { email?: string, password?: string }\n    ): string | null {\n        if (!email || !password) {\n            return UNFILLED_FIELDS_ERROR;\n        }\n        return null;\n    };\n\n    render() {\n        return (\n            <AuthRender>\n                {({ handleSubmit, onInputChange, errorMessage, auth, setErrorMessage }: InjectedProps) => {\n                    return (\n                        <Layout title={'Login'}>\n                            <Mutation mutation={LOGIN_MUTATION} onError={() => { }}>\n                                {(mutate: any, { loading, error, data }: any) => {\n                                    if (!error && data) {\n                                        Router.push('/');\n                                    }\n                                    console.log('properties', handleSubmit, onInputChange, auth);\n\n                                    return (\n                                        <div className=\"form-container d-flex flex-column justify-content-center\">\n                                            {loading && <LoadingBar />}\n                                            {error && <Alert message={error.graphQLErrors[0].message} />}\n                                            {errorMessage && <Alert message={errorMessage} />}\n                                            <div className=\"text-center heading heading-large\">Login</div>\n                                            <div className=\"row d-flex justify-content-center\">\n                                                <form\n                                                    className=\"d-flex flex-column col-10 col-sm-8 col-md-3\"\n                                                    onSubmit={handleSubmit.bind(\n                                                        this, {\n                                                            auth,\n                                                            mutate,\n                                                            validateInputs: this.validateInputs,\n                                                            setErrorMessage\n                                                        }\n                                                    )}\n                                                >\n                                                    <InputField\n                                                        name={'email'}\n                                                        labelTitle={'Email'}\n                                                        placeholderTitle={'Enter your email'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <InputField\n                                                        name={'password'}\n                                                        labelTitle={'Password'}\n                                                        type=\"password\"\n                                                        placeholderTitle={'Enter your password'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <ButtonPrimary title={'Login'} />\n                                                </form>\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Mutation>\n                        </Layout>\n                    )\n                }}\n            </AuthRender>\n        );\n    }\n}\n\nexport default withAuthPages(Login);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AAGA;;;;AAtEA;AACA;AAwEA;;;;A","sourceRoot":""}