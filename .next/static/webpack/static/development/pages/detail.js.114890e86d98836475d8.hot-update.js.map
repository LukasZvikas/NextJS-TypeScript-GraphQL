{"version":3,"file":"static/webpack/static/development/pages/detail.js.114890e86d98836475d8.hot-update.js","sources":["webpack:///./components/WithAuth.tsx","webpack:///./graphql/auth/getUser.tsx"],"sourcesContent":["import React, { ComponentClass, Component } from 'react';\nimport { GET_USER_QUERY } from '../graphql/auth/getUser';\nimport redirect from '../lib/redirect';\n\nexport const withAuth = <T extends object>(C: ComponentClass<T>) => {\n    return class IsAuth extends Component<T> {\n        static async getInitialProps(context: any) {\n            try {\n                const response = await context.apolloClient.query({\n                    query: GET_USER_QUERY\n                });\n                return { user: response.data.getUser }\n            }\n            catch (err) {\n                redirect(context, '/');\n                return {};\n            }\n        }\n        render() {\n            return <C {...this.props} />\n        }\n    }\n}","import gql from 'graphql-tag';\n\nexport const GET_USER_QUERY = gql`\n  query {\n    getUser {\n      _id\n      email\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AACA;AAJA;AAGA;AAHA;AAMA;AAAA;AACA;AAPA;AAAA;AAAA;AASA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;;;;A","sourceRoot":""}