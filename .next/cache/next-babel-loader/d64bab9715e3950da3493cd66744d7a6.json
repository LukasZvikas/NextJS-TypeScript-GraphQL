{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { InputField } from \"../components/InputField\";\nimport { registerMutation } from \"../graphql/auth/register\";\nimport { Mutation } from \"react-apollo\";\nimport { validateEmail } from \"../utilities/emailValidation\";\nimport { PASS_MISMATCH_ERROR, PASS_LENGTH_ERROR, INVALID_EMAIL_ERROR, UNFILLED_FIELDS_ERROR } from \"../utilities/errorMessages\";\nimport { Alert } from \"../components/Alert\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errorMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearErrorMessage\", function () {\n      _this.setState({\n        errorMessage: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEmailChange\", function (value) {\n      var errorMessage = _this.state.errorMessage;\n      if (errorMessage) _this.clearErrorMessage();\n\n      _this.setState({\n        email: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPasswordChange\", function (value) {\n      var errorMessage = _this.state.errorMessage;\n      if (errorMessage) _this.clearErrorMessage();\n\n      _this.setState({\n        password: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPasswordConfirmChange\", function (value) {\n      var errorMessage = _this.state.errorMessage;\n      if (errorMessage) _this.clearErrorMessage();\n\n      _this.setState({\n        passwordConfirm: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validatePasswordMatch\", function (passwordOne, passwordTwo) {\n      if (passwordOne !== passwordTwo) return false;\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validatePasswordLength\", function (password) {\n      if (password.length < 5) return false;\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateInputs\", function (email, password, passwordConfirm) {\n      if (!email || !password || !passwordConfirm) {\n        return UNFILLED_FIELDS_ERROR;\n      } else if (!validateEmail(email)) {\n        return INVALID_EMAIL_ERROR;\n      } else if (!_this.validatePasswordMatch(password, passwordConfirm)) {\n        return PASS_MISMATCH_ERROR;\n      } else if (!_this.validatePasswordLength(password)) {\n        return PASS_LENGTH_ERROR;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordConfirm = _this$state.passwordConfirm,\n          errorMessage = _this$state.errorMessage;\n      return React.createElement(Layout, {\n        title: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Mutation, {\n        mutation: registerMutation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, function (register, _ref) {\n        var error = _ref.error;\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, error ? React.createElement(Alert, {\n          message: error.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }) : null, errorMessage ? React.createElement(Alert, {\n          message: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }) : null, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Register\"), React.createElement(\"div\", {\n          className: \"row d-flex justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"d-flex flex-column col-10 col-sm-6 col-md-4\",\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n\n            var isInvalidInputs = _this2.validateInputs(email, password, passwordConfirm);\n\n            if (isInvalidInputs) {\n              _this2.setState({\n                errorMessage: isInvalidInputs\n              });\n\n              return;\n            }\n\n            register({\n              variables: {\n                email: email,\n                password: password\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(InputField, {\n          labelTitle: \"Email\",\n          placeholderTitle: \"Enter your email\",\n          onTextChange: function onTextChange(e) {\n            return _this2.onEmailChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(InputField, {\n          labelTitle: \"Password\",\n          type: \"password\",\n          placeholderTitle: \"Enter your password\",\n          onTextChange: function onTextChange(e) {\n            return _this2.onPasswordChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(InputField, {\n          labelTitle: \"Confirm password\",\n          type: \"password\",\n          placeholderTitle: \"Repeat your password\",\n          onTextChange: function onTextChange(e) {\n            return _this2.onPasswordConfirmChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"button button__primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Sign Up\")))));\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx"],"names":["React","Component","Fragment","Layout","InputField","registerMutation","Mutation","validateEmail","PASS_MISMATCH_ERROR","PASS_LENGTH_ERROR","INVALID_EMAIL_ERROR","UNFILLED_FIELDS_ERROR","Alert","Register","email","password","passwordConfirm","errorMessage","setState","value","state","clearErrorMessage","passwordOne","passwordTwo","length","validatePasswordMatch","validatePasswordLength","register","error","message","e","preventDefault","isInvalidInputs","validateInputs","variables","onEmailChange","target","onPasswordChange","onPasswordConfirmChange"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent, Fragment } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { InputField } from \"../components/InputField\";\nimport { registerMutation } from \"../graphql/auth/register\";\nimport { Mutation } from \"react-apollo\";\nimport { validateEmail } from \"../utilities/emailValidation\";\nimport {\n    PASS_MISMATCH_ERROR,\n    PASS_LENGTH_ERROR,\n    INVALID_EMAIL_ERROR,\n    UNFILLED_FIELDS_ERROR\n}\n    from \"../utilities/errorMessages\";\nimport { Alert } from \"../components/Alert\";\n\nclass Register extends Component {\n    state = { email: \"\", password: \"\", passwordConfirm: \"\", errorMessage: \"\" };\n\n    clearErrorMessage = () => {\n        this.setState({ errorMessage: \"\" });\n    }\n\n    onEmailChange = (value: string): void => {\n        const { errorMessage } = this.state;\n        if (errorMessage) this.clearErrorMessage();\n        this.setState({ email: value });\n    }\n\n    onPasswordChange = (value: string): void => {\n        const { errorMessage } = this.state;\n        if (errorMessage) this.clearErrorMessage();\n        this.setState({ password: value });\n    }\n\n    onPasswordConfirmChange = (value: string): void => {\n        const { errorMessage } = this.state;\n        if (errorMessage) this.clearErrorMessage();\n        this.setState({ passwordConfirm: value });\n    }\n\n    validatePasswordMatch = (passwordOne: string, passwordTwo: string) => {\n        if (passwordOne !== passwordTwo) return false;\n        return true;\n    }\n\n    validatePasswordLength = (password: string) => {\n        if (password.length < 5) return false;\n        return true;\n    }\n\n    validateInputs = (email: string, password: string, passwordConfirm: string) => {\n        if (!email || !password || !passwordConfirm) {\n            return UNFILLED_FIELDS_ERROR;\n        }\n        else if (!validateEmail(email)) {\n            return INVALID_EMAIL_ERROR\n        }\n        else if (!this.validatePasswordMatch(password, passwordConfirm)) {\n            return PASS_MISMATCH_ERROR;\n        }\n        else if (!this.validatePasswordLength(password)) {\n            return PASS_LENGTH_ERROR;\n        }\n    }\n\n    render() {\n        const { email, password, passwordConfirm, errorMessage } = this.state;\n        return (\n            <Layout title={\"Register\"}>\n                <Mutation mutation={registerMutation}>\n                    {(register: any, { error }: any) => {\n                        return (\n                            <Fragment>\n                                {error ? <Alert message={error.message} /> : null}\n                                {errorMessage ? <Alert message={errorMessage} /> : null}\n                                <div>Register</div>\n                                <div className=\"row d-flex justify-content-center\">\n                                    <form\n                                        className=\"d-flex flex-column col-10 col-sm-6 col-md-4\"\n                                        onSubmit={(e) => {\n                                            e.preventDefault();\n                                            const isInvalidInputs = this.validateInputs(email, password, passwordConfirm);\n                                            if (isInvalidInputs) {\n                                                this.setState({ errorMessage: isInvalidInputs });\n                                                return;\n                                            }\n                                            register({ variables: { email, password } });\n                                        }}\n                                    >\n                                        <InputField\n                                            labelTitle={\"Email\"}\n                                            placeholderTitle={\"Enter your email\"}\n                                            onTextChange={(e: ChangeEvent<HTMLInputElement>) => this.onEmailChange(e.target.value)}\n                                        />\n                                        <InputField\n                                            labelTitle={\"Password\"}\n                                            type=\"password\"\n                                            placeholderTitle={\"Enter your password\"}\n                                            onTextChange={(e: ChangeEvent<HTMLInputElement>) => this.onPasswordChange(e.target.value)}\n                                        />\n                                        <InputField\n                                            labelTitle={\"Confirm password\"}\n                                            type=\"password\"\n                                            placeholderTitle={\"Repeat your password\"}\n                                            onTextChange={(e: ChangeEvent<HTMLInputElement>) => this.onPasswordConfirmChange(e.target.value)}\n                                        />\n                                        <div className=\"d-flex justify-content-center\">\n                                            <button className=\"button button__primary\">Sign Up</button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </Fragment>\n                        );\n                    }}\n                </Mutation>\n            </Layout >);\n    }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}