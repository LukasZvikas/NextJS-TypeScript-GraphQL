{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/components/WithAuth.tsx\";\nimport React, { Component } from 'react';\nimport { GET_USER_QUERY } from '../graphql/auth/getUser';\nimport redirect from '../lib/redirect';\nexport var withAuth = function withAuth(C) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(IsAuth, _Component);\n\n      function IsAuth() {\n        _classCallCheck(this, IsAuth);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(IsAuth).apply(this, arguments));\n      }\n\n      _createClass(IsAuth, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(C, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }));\n        }\n      }], [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(context) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", context.apolloClient.query({\n                      query: GET_USER_QUERY\n                    }).then(function (res) {\n                      return {\n                        user: res.data.getUser\n                      };\n                    }).catch(function (e) {\n                      console.log('error', e);\n                      redirect(context, '/login');\n                      return {\n                        user: {}\n                      };\n                    }));\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      return IsAuth;\n    }(Component)\n  );\n};","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/components/WithAuth.tsx"],"names":["React","Component","GET_USER_QUERY","redirect","withAuth","C","props","context","apolloClient","query","then","res","user","data","getUser","catch","e","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAmBC,CAAnB,EAA4C;AAChE;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAea;AACL,iBAAO,oBAAC,CAAD,eAAO,KAAKC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AAjBL;AAAA;AAAA;AAAA;AAAA;AAAA,oDACiCC,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEeA,OAAO,CAACC,YAAR,CAAqBC,KAArB,CAA2B;AAC9BA,sBAAAA,KAAK,EAAEP;AADuB,qBAA3B,EAEJQ,IAFI,CAEC,UAACC,GAAD,EAAc;AAClB,6BAAO;AAAEC,wBAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASC;AAAjB,uBAAP;AACH,qBAJM,EAKFC,KALE,CAKI,UAACC,CAAD,EAAY;AACfC,sBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;AACAb,sBAAAA,QAAQ,CAACI,OAAD,EAAU,QAAV,CAAR;AACA,6BAAO;AAAEK,wBAAAA,IAAI,EAAE;AAAR,uBAAP;AAEH,qBAVE,CAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAA4BX,SAA5B;AAAA;AAmBH,CApBM","sourcesContent":["import React, { ComponentClass, Component } from 'react';\nimport { GET_USER_QUERY } from '../graphql/auth/getUser';\nimport redirect from '../lib/redirect';\n\nexport const withAuth = <T extends object>(C: ComponentClass<T>) => {\n    return class IsAuth extends Component<T> {\n        static async getInitialProps(context: any) {\n            return context.apolloClient.query({\n                query: GET_USER_QUERY\n            }).then((res: any) => {\n                return { user: res.data.getUser };\n            })\n                .catch((e: any) => {\n                    console.log('error', e);\n                    redirect(context, '/login');\n                    return { user: {} };\n\n                });\n        }\n\n        render() {\n            return <C {...this.props} />\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}