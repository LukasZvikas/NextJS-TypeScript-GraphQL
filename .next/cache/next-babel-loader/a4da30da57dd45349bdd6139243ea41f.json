{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/login.tsx\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { LOGIN_MUTATION } from '../graphql/auth/login';\nimport { Mutation } from 'react-apollo';\nimport { UNFILLED_FIELDS_ERROR } from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\nimport AuthRender from '../components/AuthRender';\nimport Router from 'next/router';\nimport { withAuthPages } from '../components/withAuthPages';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"validateInputs\",\n    value: function validateInputs(_ref) {\n      var email = _ref.email,\n          password = _ref.password;\n\n      if (!email || !password) {\n        return UNFILLED_FIELDS_ERROR;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(AuthRender, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            _onInputChange = _ref2.onInputChange,\n            errorMessage = _ref2.errorMessage,\n            auth = _ref2.auth;\n        console.log('err', errorMessage);\n        return React.createElement(Layout, {\n          title: 'Login',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Mutation, {\n          mutation: LOGIN_MUTATION,\n          onError: function onError() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, function (mutate, _ref3) {\n          var loading = _ref3.loading,\n              error = _ref3.error,\n              data = _ref3.data;\n\n          if (!error && data) {\n            Router.push('/');\n          }\n\n          console.log('data', data, 'error', error);\n          return React.createElement(\"div\", {\n            className: \"form-container d-flex flex-column justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, loading && React.createElement(LoadingBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }), error && React.createElement(Alert, {\n            message: error.graphQLErrors[0].message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }), errorMessage && React.createElement(Alert, {\n            message: errorMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"text-center heading heading-large\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"Login\"), React.createElement(\"div\", {\n            className: \"row d-flex justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            className: \"d-flex flex-column col-10 col-sm-8 col-md-3\",\n            onSubmit: handleSubmit.bind(_this, {\n              auth: auth,\n              mutate: mutate,\n              validateInputs: _this.validateInputs\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(InputField, {\n            name: 'email',\n            labelTitle: 'Email',\n            placeholderTitle: 'Enter your email',\n            onInputChange: function onInputChange(e) {\n              return _onInputChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }), React.createElement(InputField, {\n            name: 'password',\n            labelTitle: 'Password',\n            type: \"password\",\n            placeholderTitle: 'Enter your password',\n            onInputChange: function onInputChange(e) {\n              return _onInputChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), React.createElement(ButtonPrimary, {\n            title: 'Login',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }))));\n        }));\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default withAuthPages(Login);","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/login.tsx"],"names":["React","Component","Layout","InputField","LOGIN_MUTATION","Mutation","UNFILLED_FIELDS_ERROR","Alert","ButtonPrimary","LoadingBar","AuthRender","Router","withAuthPages","Login","email","password","handleSubmit","onInputChange","errorMessage","auth","console","log","mutate","loading","error","data","push","graphQLErrors","message","bind","validateInputs","e"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { LOGIN_MUTATION } from '../graphql/auth/login';\nimport { Mutation } from 'react-apollo';\nimport { UNFILLED_FIELDS_ERROR } from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\nimport AuthRender from '../components/AuthRender';\nimport Router from 'next/router';\nimport { withAuthPages } from '../components/withAuthPages';\nimport { InjectedProps } from '../types/authTypes';\n\nclass Login extends Component<InjectedProps, {}> {\n    validateInputs(\n        { email, password }: { email?: string, password?: string }\n    ): string | null {\n        if (!email || !password) {\n            return UNFILLED_FIELDS_ERROR;\n        }\n        return null;\n    };\n\n    render() {\n        return (\n            <AuthRender>\n                {({ handleSubmit, onInputChange, errorMessage, auth }: InjectedProps) => {\n                    console.log('err', errorMessage)\n                    return (\n                        <Layout title={'Login'}>\n                            <Mutation mutation={LOGIN_MUTATION} onError={() => { }}>\n                                {(mutate: any, { loading, error, data }: any) => {\n                                    if (!error && data) {\n                                        Router.push('/');\n                                    }\n                                    console.log('data', data, 'error', error)\n\n                                    return (\n                                        <div className=\"form-container d-flex flex-column justify-content-center\">\n                                            {loading && <LoadingBar />}\n                                            {error && <Alert message={error.graphQLErrors[0].message} />}\n                                            {errorMessage && <Alert message={errorMessage} />}\n                                            <div className=\"text-center heading heading-large\">Login</div>\n                                            <div className=\"row d-flex justify-content-center\">\n                                                <form\n                                                    className=\"d-flex flex-column col-10 col-sm-8 col-md-3\"\n                                                    onSubmit={handleSubmit.bind(\n                                                        this, {\n                                                            auth,\n                                                            mutate,\n                                                            validateInputs: this.validateInputs\n                                                        }\n                                                    )\n                                                    }\n                                                >\n                                                    <InputField\n                                                        name={'email'}\n                                                        labelTitle={'Email'}\n                                                        placeholderTitle={'Enter your email'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <InputField\n                                                        name={'password'}\n                                                        labelTitle={'Password'}\n                                                        type=\"password\"\n                                                        placeholderTitle={'Enter your password'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <ButtonPrimary title={'Login'} />\n                                                </form>\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Mutation>\n                        </Layout>\n                    )\n                }}\n            </AuthRender>\n        );\n    }\n}\n\nexport default withAuthPages(Login);\n"]},"metadata":{},"sourceType":"module"}