{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { REGISTER_MUTATION } from '../graphql/auth/register';\nimport { Mutation } from 'react-apollo';\nimport { validateEmail, validatePasswordLength, validatePasswordMatch } from '../utilities/authValidation';\nimport { PASS_MISMATCH_ERROR, PASS_LENGTH_ERROR, INVALID_EMAIL_ERROR, UNFILLED_FIELDS_ERROR } from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\nimport AuthRender from '../components/AuthRender';\nimport { withAuthPages } from '../components/withAuthPages';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    _classCallCheck(this, Register);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Register).apply(this, arguments));\n  }\n\n  _createClass(Register, [{\n    key: \"validateInputs\",\n    value: function validateInputs(_ref) {\n      var email = _ref.email,\n          password = _ref.password,\n          passwordConfirm = _ref.passwordConfirm;\n\n      if (!email || !password || !passwordConfirm) {\n        return UNFILLED_FIELDS_ERROR;\n      } else if (!validateEmail(email)) {\n        return INVALID_EMAIL_ERROR;\n      } else if (!validatePasswordLength(password)) {\n        return PASS_LENGTH_ERROR;\n      } else if (!validatePasswordMatch(password, passwordConfirm)) {\n        return PASS_MISMATCH_ERROR;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(AuthRender, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            _onInputChange = _ref2.onInputChange,\n            errorMessage = _ref2.errorMessage,\n            auth = _ref2.auth,\n            setErrorMessage = _ref2.setErrorMessage;\n        return React.createElement(Layout, {\n          title: 'Register',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Mutation, {\n          mutation: REGISTER_MUTATION,\n          onError: function onError() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, function (mutate, _ref3) {\n          var loading = _ref3.loading,\n              error = _ref3.error;\n\n          if (loading) {\n            return React.createElement(LoadingBar, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            });\n          }\n\n          console.log('auth', auth);\n          return React.createElement(\"div\", {\n            className: \"form-container d-flex flex-column justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, loading && React.createElement(LoadingBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), error && React.createElement(Alert, {\n            message: error.graphQLErrors[0].message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), errorMessage && React.createElement(Alert, {\n            message: errorMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"text-center heading heading-large\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \"Register\"), React.createElement(\"div\", {\n            className: \"row d-flex justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            className: \"d-flex flex-column col-10 col-sm-6 col-md-3\",\n            onSubmit: handleSubmit.bind(_this, {\n              auth: auth,\n              mutate: mutate,\n              validateInputs: _this.validateInputs,\n              setErrorMessage: setErrorMessage\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(InputField, {\n            name: 'email',\n            labelTitle: 'Email',\n            placeholderTitle: 'Enter your email',\n            onInputChange: function onInputChange(e) {\n              return _onInputChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), React.createElement(InputField, {\n            name: 'password',\n            labelTitle: 'Password',\n            type: \"password\",\n            placeholderTitle: 'Enter your password',\n            onInputChange: function onInputChange(e) {\n              return _onInputChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }), React.createElement(InputField, {\n            name: 'passwordConfirm',\n            labelTitle: 'Confirm password',\n            type: \"password\",\n            placeholderTitle: 'Repeat your password',\n            onInputChange: function onInputChange(e) {\n              return _onInputChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }), React.createElement(ButtonPrimary, {\n            title: 'Sign Up',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }))));\n        }));\n      });\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default withAuthPages(Register);","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx"],"names":["React","Component","Layout","InputField","REGISTER_MUTATION","Mutation","validateEmail","validatePasswordLength","validatePasswordMatch","PASS_MISMATCH_ERROR","PASS_LENGTH_ERROR","INVALID_EMAIL_ERROR","UNFILLED_FIELDS_ERROR","Alert","ButtonPrimary","LoadingBar","AuthRender","withAuthPages","Register","email","password","passwordConfirm","handleSubmit","onInputChange","errorMessage","auth","setErrorMessage","mutate","loading","error","console","log","graphQLErrors","message","bind","validateInputs","e"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { REGISTER_MUTATION } from '../graphql/auth/register';\nimport { Mutation } from 'react-apollo';\nimport {\n    validateEmail,\n    validatePasswordLength,\n    validatePasswordMatch\n}\n    from '../utilities/authValidation';\nimport {\n    PASS_MISMATCH_ERROR,\n    PASS_LENGTH_ERROR,\n    INVALID_EMAIL_ERROR,\n    UNFILLED_FIELDS_ERROR\n} from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\nimport AuthRender from '../components/AuthRender';\nimport { withAuthPages } from '../components/withAuthPages';\nimport { InjectedProps } from '../types/authTypes';\n\nclass Register extends Component<{}, {}> {\n\n    validateInputs(\n        { email, password, passwordConfirm }:\n            { email?: string, password?: string, passwordConfirm?: string }\n    ) {\n        if (!email || !password || !passwordConfirm) {\n            return UNFILLED_FIELDS_ERROR;\n        } else if (!validateEmail(email)) {\n            return INVALID_EMAIL_ERROR;\n        }\n        else if (!validatePasswordLength(password)) {\n            return PASS_LENGTH_ERROR;\n        }\n        else if (!validatePasswordMatch(password, passwordConfirm)) {\n            return PASS_MISMATCH_ERROR;\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <AuthRender>\n                {({ handleSubmit, onInputChange, errorMessage, auth, setErrorMessage }: InjectedProps) => {\n                    return (\n                        <Layout title={'Register'}>\n                            <Mutation mutation={REGISTER_MUTATION} onError={() => { }}>\n                                {(mutate: any, { loading, error }: any) => {\n                                    if (loading) {\n                                        return <LoadingBar />;\n                                    }\n                                    console.log('auth', auth)\n                                    return (\n                                        <div className=\"form-container d-flex flex-column justify-content-center\">\n                                            {loading && <LoadingBar />}\n                                            {error && <Alert message={error.graphQLErrors[0].message} />}\n                                            {errorMessage && <Alert message={errorMessage} />}\n                                            <div className=\"text-center heading heading-large\">Register</div>\n                                            <div className=\"row d-flex justify-content-center\">\n                                                <form\n                                                    className=\"d-flex flex-column col-10 col-sm-6 col-md-3\"\n                                                    onSubmit={handleSubmit.bind(this, {\n                                                        auth,\n                                                        mutate,\n                                                        validateInputs: this.validateInputs,\n                                                        setErrorMessage\n                                                    })}\n                                                >\n                                                    <InputField\n                                                        name={'email'}\n                                                        labelTitle={'Email'}\n                                                        placeholderTitle={'Enter your email'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <InputField\n                                                        name={'password'}\n                                                        labelTitle={'Password'}\n                                                        type=\"password\"\n                                                        placeholderTitle={'Enter your password'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <InputField\n                                                        name={'passwordConfirm'}\n                                                        labelTitle={'Confirm password'}\n                                                        type=\"password\"\n                                                        placeholderTitle={'Repeat your password'}\n                                                        onInputChange={(e: ChangeEvent<HTMLInputElement>) =>\n                                                            onInputChange(e)\n                                                        }\n                                                    />\n                                                    <ButtonPrimary title={'Sign Up'} />\n                                                </form>\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Mutation>\n                        </Layout>\n                    )\n                }}\n            </AuthRender>\n        );\n    }\n}\n\nexport default withAuthPages(Register);\n"]},"metadata":{},"sourceType":"module"}