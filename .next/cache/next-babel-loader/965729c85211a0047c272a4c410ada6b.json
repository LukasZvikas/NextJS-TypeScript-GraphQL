{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { Component } from 'react';\n\nvar AuthRender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthRender, _Component);\n\n  function AuthRender() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AuthRender);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuthRender)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      auth: {},\n      errorMessage: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(AuthRender, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(_ref, event) {\n      var auth = _ref.auth,\n          mutate = _ref.mutate,\n          validateInputs = _ref.validateInputs,\n          setErrorMessage = _ref.setErrorMessage;\n      event.preventDefault();\n      var isInvalidInputs = validateInputs(auth);\n\n      if (isInvalidInputs) {\n        setErrorMessage(isInvalidInputs);\n        return;\n      }\n\n      mutate({\n        variables: _objectSpread({}, auth)\n      });\n    }\n  }, {\n    key: \"setErrorMessage\",\n    value: function setErrorMessage(message) {\n      this.setState({\n        errorMessage: message\n      });\n    }\n  }, {\n    key: \"clearErrorMessage\",\n    value: function clearErrorMessage() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(errorMessage, _ref2) {\n      var target = _ref2.target;\n\n      if (errorMessage) {\n        this.clearErrorMessage();\n      }\n\n      this.setState({\n        auth: _objectSpread({}, this.state.auth, _defineProperty({}, target.name, target.value))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errorMessage = _this$state.errorMessage,\n          auth = _this$state.auth;\n      console.log('error', this.state);\n      return this.props.children({\n        auth: auth,\n        handleSubmit: this.handleSubmit,\n        onInputChange: this.onInputChange.bind(this, errorMessage),\n        errorMessage: errorMessage,\n        setErrorMessage: this.setErrorMessage.bind(this)\n      });\n    }\n  }]);\n\n  return AuthRender;\n}(Component);\n\nexport default AuthRender;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/components/AuthRender.tsx"],"names":["Component","AuthRender","auth","errorMessage","event","mutate","validateInputs","setErrorMessage","preventDefault","isInvalidInputs","variables","message","setState","target","clearErrorMessage","state","name","value","console","log","props","children","handleSubmit","onInputChange","bind"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAAqC,OAArC;;IAiBMC,U;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,YAAY,EAAE;AAFV,K;;;;;;;uCAiBJC,K,EACF;AAAA,UAXMF,IAWN,QAXMA,IAWN;AAAA,UAVMG,MAUN,QAVMA,MAUN;AAAA,UATMC,cASN,QATMA,cASN;AAAA,UARMC,eAQN,QARMA,eAQN;AACEH,MAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,eAAe,GAAGH,cAAc,CAACJ,IAAD,CAAtC;;AAEA,UAAIO,eAAJ,EAAqB;AACjBF,QAAAA,eAAe,CAACE,eAAD,CAAf;AACA;AACH;;AAEDJ,MAAAA,MAAM,CAAC;AAAEK,QAAAA,SAAS,oBAAOR,IAAP;AAAX,OAAD,CAAN;AACH;;;oCAEeS,O,EAAuB;AACnC,WAAKC,QAAL,CAAc;AAAET,QAAAA,YAAY,EAAEQ;AAAhB,OAAd;AACH;;;wCAEmB;AAChB,WAAKC,QAAL,CAAc;AAAET,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH;;;kCAEaA,Y,SAA6C;AAAA,UAArBU,MAAqB,SAArBA,MAAqB;;AACvD,UAAIV,YAAJ,EAAkB;AACd,aAAKW,iBAAL;AACH;;AACD,WAAKF,QAAL,CAAc;AACVV,QAAAA,IAAI,oBACG,KAAKa,KAAL,CAAWb,IADd,sBAECW,MAAM,CAACG,IAFR,EAEeH,MAAM,CAACI,KAFtB;AADM,OAAd;AAMH;;;6BAEQ;AAAA,wBAC0B,KAAKF,KAD/B;AAAA,UACGZ,YADH,eACGA,YADH;AAAA,UACiBD,IADjB,eACiBA,IADjB;AAELgB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKJ,KAA1B;AACA,aAAO,KAAKK,KAAL,CAAWC,QAAX,CAAoB;AACvBnB,QAAAA,IAAI,EAAJA,IADuB;AAEvBoB,QAAAA,YAAY,EAAE,KAAKA,YAFI;AAGvBC,QAAAA,aAAa,EAAE,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BrB,YAA9B,CAHQ;AAIvBA,QAAAA,YAAY,EAAZA,YAJuB;AAKvBI,QAAAA,eAAe,EAAE,KAAKA,eAAL,CAAqBiB,IAArB,CAA0B,IAA1B;AALM,OAApB,CAAP;AAOH;;;;EA9DoBxB,S;;AAiEzB,eAAeC,UAAf","sourcesContent":["import { Component, FormEvent } from 'react';\nimport { InjectedProps, AuthType } from '../types/authTypes';\n\ninterface AuthState {\n    auth: AuthType;\n    errorMessage?: string;\n}\n\ninterface AuthProps {\n    user?: {\n        email: string;\n        _id: string;\n    };\n    data?: any;\n    children(props: InjectedProps): JSX.Element;\n}\n\nclass AuthRender extends Component<AuthProps, AuthState> {\n    state = {\n        auth: {},\n        errorMessage: ''\n    };\n\n    handleSubmit(\n        {\n            auth,\n            mutate,\n            validateInputs,\n            setErrorMessage\n        }: {\n            auth: AuthType;\n            mutate: any;\n            validateInputs: (auth: AuthType) => string | null,\n            setErrorMessage: (message: string) => void\n        },\n        event: FormEvent<EventTarget>\n    ) {\n        event.preventDefault();\n\n        const isInvalidInputs = validateInputs(auth);\n\n        if (isInvalidInputs) {\n            setErrorMessage(isInvalidInputs);\n            return;\n        }\n\n        mutate({ variables: { ...auth } });\n    }\n\n    setErrorMessage(message: string): void {\n        this.setState({ errorMessage: message });\n    }\n\n    clearErrorMessage() {\n        this.setState({ errorMessage: '' });\n    }\n\n    onInputChange(errorMessage: string, { target }: any): void {\n        if (errorMessage) {\n            this.clearErrorMessage();\n        }\n        this.setState({\n            auth: {\n                ...this.state.auth,\n                [target.name]: target.value\n            }\n        });\n    }\n\n    render() {\n        const { errorMessage, auth } = this.state;\n        console.log('error', this.state)\n        return this.props.children({\n            auth,\n            handleSubmit: this.handleSubmit,\n            onInputChange: this.onInputChange.bind(this, errorMessage),\n            errorMessage,\n            setErrorMessage: this.setErrorMessage.bind(this)\n        });\n    }\n}\n\nexport default AuthRender;\n"]},"metadata":{},"sourceType":"module"}