{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar next = _interopRequireWildcard(require(\"./\"));\n\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./event-source-polyfill\"));\n\nvar _onDemandEntriesClient = _interopRequireDefault(require(\"./on-demand-entries-client\"));\n\nvar _webpackHotMiddlewareClient = _interopRequireDefault(require(\"./webpack-hot-middleware-client\")); // Temporary workaround for the issue described here:\n// https://github.com/zeit/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n\n\nimport('./noop'); // Support EventSource on Internet Explorer 11\n\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill.default;\n}\n\nvar _window = window,\n    assetPrefix = _window.__NEXT_DATA__.assetPrefix;\nvar prefix = assetPrefix || '';\nvar webpackHMR = (0, _webpackHotMiddlewareClient.default)({\n  assetPrefix: prefix\n});\nwindow.next = next;\n(0, next.default)({\n  webpackHMR: webpackHMR\n}).then(function (emitter) {\n  (0, _onDemandEntriesClient.default)({\n    assetPrefix: prefix\n  });\n  var lastScroll;\n  emitter.on('before-reactdom-render', function (_ref) {\n    var Component = _ref.Component,\n        ErrorComponent = _ref.ErrorComponent;\n\n    // Remember scroll when ErrorComponent is being rendered to later restore it\n    if (!lastScroll && Component === ErrorComponent) {\n      var _window2 = window,\n          pageXOffset = _window2.pageXOffset,\n          pageYOffset = _window2.pageYOffset;\n      lastScroll = {\n        x: pageXOffset,\n        y: pageYOffset\n      };\n    }\n  });\n  emitter.on('after-reactdom-render', function (_ref2) {\n    var Component = _ref2.Component,\n        ErrorComponent = _ref2.ErrorComponent;\n\n    if (lastScroll && Component !== ErrorComponent) {\n      // Restore scroll after ErrorComponent was replaced with a page component by HMR\n      var _lastScroll = lastScroll,\n          x = _lastScroll.x,\n          y = _lastScroll.y;\n      window.scroll(x, y);\n      lastScroll = null;\n    }\n  });\n}).catch(function (err) {\n  console.error('Error was not caught', err);\n});","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/node_modules/next/dist/client/next-dev.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","next","_eventSourcePolyfill","_onDemandEntriesClient","_webpackHotMiddlewareClient","window","EventSource","default","_window","assetPrefix","__NEXT_DATA__","prefix","webpackHMR","then","emitter","lastScroll","on","Component","ErrorComponent","_window2","pageXOffset","pageYOffset","x","y","_lastScroll","scroll","catch","err","console","error"],"mappings":"AAAA;;AAAa,IAAIA,sBAAsB,GAACC,OAAO,CAAC,sDAAD,CAAlC;;AAA2F,IAAIC,uBAAuB,GAACD,OAAO,CAAC,uDAAD,CAAnC;;AAA6F,IAAIE,IAAI,GAACD,uBAAuB,CAACD,OAAO,CAAC,IAAD,CAAR,CAAhC;;AAAgD,IAAIG,oBAAoB,GAACJ,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAA/C;;AAAoF,IAAII,sBAAsB,GAACL,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAjD;;AAAyF,IAAIK,2BAA2B,GAACN,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAAtD,C,CAAmG;AACrgB;AACA;AACA;;;AACA,OAAO,QAAP,E,CACA;;AACA,IAAG,CAACM,MAAM,CAACC,WAAX,EAAuB;AAACD,EAAAA,MAAM,CAACC,WAAP,GAAmBJ,oBAAoB,CAACK,OAAxC;AAAiD;;AAAA,IAAMC,OAAO,GAACH,MAAd;AAAA,IAAqBI,WAAW,GAACD,OAAO,CAACE,aAAR,CAAsBD,WAAvD;AAAmE,IAAME,MAAM,GAACF,WAAW,IAAE,EAA1B;AAA6B,IAAMG,UAAU,GAAC,CAAC,GAAER,2BAA2B,CAACG,OAA/B,EAAwC;AAACE,EAAAA,WAAW,EAACE;AAAb,CAAxC,CAAjB;AAA+EN,MAAM,CAACJ,IAAP,GAAYA,IAAZ;AAAiB,CAAC,GAAEA,IAAI,CAACM,OAAR,EAAiB;AAACK,EAAAA,UAAU,EAAVA;AAAD,CAAjB,EAA+BC,IAA/B,CAAoC,UAAAC,OAAO,EAAE;AAAC,GAAC,GAAEX,sBAAsB,CAACI,OAA1B,EAAmC;AAACE,IAAAA,WAAW,EAACE;AAAb,GAAnC;AAAyD,MAAII,UAAJ;AAAeD,EAAAA,OAAO,CAACE,EAAR,CAAW,wBAAX,EAAoC,gBAA8B;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAlBC,cAAkB,QAAlBA,cAAkB;;AAAC;AAClc,QAAG,CAACH,UAAD,IAAaE,SAAS,KAAGC,cAA5B,EAA2C;AAAC,UAAMC,QAAQ,GAACd,MAAf;AAAA,UAAsBe,WAAW,GAACD,QAAQ,CAACC,WAA3C;AAAA,UAAuDC,WAAW,GAACF,QAAQ,CAACE,WAA5E;AAAwFN,MAAAA,UAAU,GAAC;AAACO,QAAAA,CAAC,EAACF,WAAH;AAAeG,QAAAA,CAAC,EAACF;AAAjB,OAAX;AAA0C;AAAC,GADgN;AAC9MP,EAAAA,OAAO,CAACE,EAAR,CAAW,uBAAX,EAAmC,iBAA8B;AAAA,QAA5BC,SAA4B,SAA5BA,SAA4B;AAAA,QAAlBC,cAAkB,SAAlBA,cAAkB;;AAAC,QAAGH,UAAU,IAAEE,SAAS,KAAGC,cAA3B,EAA0C;AAAC;AAC9R,UAAMM,WAAW,GAACT,UAAlB;AAAA,UAA6BO,CAAC,GAACE,WAAW,CAACF,CAA3C;AAAA,UAA6CC,CAAC,GAACC,WAAW,CAACD,CAA3D;AAA6DlB,MAAAA,MAAM,CAACoB,MAAP,CAAcH,CAAd,EAAgBC,CAAhB;AAAmBR,MAAAA,UAAU,GAAC,IAAX;AAAiB;AAAC,GAD+E;AAC5E,CAFoK,EAElKW,KAFkK,CAE5J,UAAAC,GAAG,EAAE;AAACC,EAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAqCF,GAArC;AAA2C,CAF2G","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var next=_interopRequireWildcard(require(\"./\"));var _eventSourcePolyfill=_interopRequireDefault(require(\"./event-source-polyfill\"));var _onDemandEntriesClient=_interopRequireDefault(require(\"./on-demand-entries-client\"));var _webpackHotMiddlewareClient=_interopRequireDefault(require(\"./webpack-hot-middleware-client\"));// Temporary workaround for the issue described here:\n// https://github.com/zeit/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\nimport('./noop');\n// Support EventSource on Internet Explorer 11\nif(!window.EventSource){window.EventSource=_eventSourcePolyfill.default;}const _window=window,assetPrefix=_window.__NEXT_DATA__.assetPrefix;const prefix=assetPrefix||'';const webpackHMR=(0,_webpackHotMiddlewareClient.default)({assetPrefix:prefix});window.next=next;(0,next.default)({webpackHMR}).then(emitter=>{(0,_onDemandEntriesClient.default)({assetPrefix:prefix});let lastScroll;emitter.on('before-reactdom-render',({Component,ErrorComponent})=>{// Remember scroll when ErrorComponent is being rendered to later restore it\nif(!lastScroll&&Component===ErrorComponent){const _window2=window,pageXOffset=_window2.pageXOffset,pageYOffset=_window2.pageYOffset;lastScroll={x:pageXOffset,y:pageYOffset};}});emitter.on('after-reactdom-render',({Component,ErrorComponent})=>{if(lastScroll&&Component!==ErrorComponent){// Restore scroll after ErrorComponent was replaced with a page component by HMR\nconst _lastScroll=lastScroll,x=_lastScroll.x,y=_lastScroll.y;window.scroll(x,y);lastScroll=null;}});}).catch(err=>{console.error('Error was not caught',err);});"]},"metadata":{},"sourceType":"script"}