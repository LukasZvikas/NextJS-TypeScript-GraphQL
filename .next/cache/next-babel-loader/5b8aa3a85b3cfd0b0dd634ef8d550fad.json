{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx\";\nimport React, { Component, Fragment } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { REGISTER_MUTATION } from '../graphql/auth/register';\nimport { Mutation } from 'react-apollo';\nimport { validateEmail } from '../utilities/emailValidation';\nimport { PASS_MISMATCH_ERROR, PASS_LENGTH_ERROR, INVALID_EMAIL_ERROR, UNFILLED_FIELDS_ERROR } from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errorMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(register, event) {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordConfirm = _this$state.passwordConfirm;\n      event.preventDefault();\n      var isInvalidInputs = this.validateInputs(email, password, passwordConfirm);\n\n      if (isInvalidInputs) {\n        this.setState({\n          errorMessage: isInvalidInputs\n        });\n        return;\n      }\n\n      register({\n        variables: {\n          email: email,\n          password: password\n        }\n      });\n    }\n  }, {\n    key: \"clearErrorMessage\",\n    value: function clearErrorMessage() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(value) {\n      var errorMessage = this.state.errorMessage;\n\n      if (errorMessage) {\n        this.clearErrorMessage();\n      }\n\n      this.setState({\n        email: value\n      });\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(value) {\n      var errorMessage = this.state.errorMessage;\n\n      if (errorMessage) {\n        this.clearErrorMessage();\n      }\n\n      this.setState({\n        password: value\n      });\n    }\n  }, {\n    key: \"onPasswordConfirmChange\",\n    value: function onPasswordConfirmChange(value) {\n      var errorMessage = this.state.errorMessage;\n\n      if (errorMessage) {\n        this.clearErrorMessage();\n      }\n\n      this.setState({\n        passwordConfirm: value\n      });\n    }\n  }, {\n    key: \"validatePasswordMatch\",\n    value: function validatePasswordMatch(passwordOne, passwordTwo) {\n      if (passwordOne !== passwordTwo) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"validatePasswordLength\",\n    value: function validatePasswordLength(password) {\n      if (password.length < 5) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"validateInputs\",\n    value: function validateInputs(email, password, passwordConfirm) {\n      if (!email || !password || !passwordConfirm) {\n        return UNFILLED_FIELDS_ERROR;\n      } else if (!validateEmail(email)) {\n        return INVALID_EMAIL_ERROR;\n      } else if (!this.validatePasswordMatch(password, passwordConfirm)) {\n        return PASS_MISMATCH_ERROR;\n      } else if (!this.validatePasswordLength(password)) {\n        return PASS_LENGTH_ERROR;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errorMessage = this.state.errorMessage;\n      return React.createElement(Layout, {\n        title: 'Register',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Mutation, {\n        mutation: REGISTER_MUTATION,\n        onError: function onError() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, function (register, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(LoadingBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          });\n        }\n\n        if (error) {\n          console.log(\"err\", error.graphQLErrors[0].message);\n        }\n\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, error ? React.createElement(Alert, {\n          message: error.graphQLErrors[0].message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }) : null, errorMessage ? React.createElement(Alert, {\n          message: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }) : null, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Register\"), React.createElement(\"div\", {\n          className: \"row d-flex justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"d-flex flex-column col-10 col-sm-6 col-md-4\",\n          onSubmit: _this2.handleSubmit.bind(_this2, register),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(InputField, {\n          labelTitle: 'Email',\n          placeholderTitle: 'Enter your email',\n          onTextChange: function onTextChange(e) {\n            return _this2.onEmailChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(InputField, {\n          labelTitle: 'Password',\n          type: \"password\",\n          placeholderTitle: 'Enter your password',\n          onTextChange: function onTextChange(e) {\n            return _this2.onPasswordChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(InputField, {\n          labelTitle: 'Confirm password',\n          type: \"password\",\n          placeholderTitle: 'Repeat your password',\n          onTextChange: function onTextChange(e) {\n            return _this2.onPasswordConfirmChange(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(ButtonPrimary, {\n          title: 'Sign Up',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }))));\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/pages/register.tsx"],"names":["React","Component","Fragment","Layout","InputField","REGISTER_MUTATION","Mutation","validateEmail","PASS_MISMATCH_ERROR","PASS_LENGTH_ERROR","INVALID_EMAIL_ERROR","UNFILLED_FIELDS_ERROR","Alert","ButtonPrimary","LoadingBar","Register","props","state","email","password","passwordConfirm","errorMessage","register","event","preventDefault","isInvalidInputs","validateInputs","setState","variables","value","clearErrorMessage","passwordOne","passwordTwo","length","validatePasswordMatch","validatePasswordLength","loading","error","console","log","graphQLErrors","message","handleSubmit","bind","e","onEmailChange","target","onPasswordChange","onPasswordConfirmChange"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent, Fragment } from 'react';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/InputField';\nimport { REGISTER_MUTATION } from '../graphql/auth/register';\nimport { Mutation } from 'react-apollo';\nimport { validateEmail } from '../utilities/emailValidation';\nimport {\n  PASS_MISMATCH_ERROR,\n  PASS_LENGTH_ERROR,\n  INVALID_EMAIL_ERROR,\n  UNFILLED_FIELDS_ERROR\n} from '../utilities/errorMessages';\nimport { Alert } from '../components/Alert';\nimport { ButtonPrimary } from '../components/ButtonPrimary';\nimport { LoadingBar } from '../components/LoadingBar';\n\ninterface RegisterState {\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  errorMessage: string;\n}\n\nclass Register extends Component<{}, RegisterState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errorMessage: \"\"\n    };\n  }\n\n  handleSubmit(register: any, event: any) {\n    const { email, password, passwordConfirm } = this.state;\n\n    event.preventDefault();\n\n    const isInvalidInputs = this.validateInputs(\n      email,\n      password,\n      passwordConfirm\n    );\n    if (isInvalidInputs) {\n      this.setState({ errorMessage: isInvalidInputs });\n      return;\n    }\n    register({ variables: { email, password } });\n  }\n\n  clearErrorMessage() {\n    this.setState({ errorMessage: '' });\n  }\n\n  onEmailChange(value: string): void {\n    const { errorMessage } = this.state;\n    if (errorMessage) { this.clearErrorMessage(); }\n    this.setState({ email: value });\n  }\n\n  onPasswordChange(value: string): void {\n    const { errorMessage } = this.state;\n    if (errorMessage) { this.clearErrorMessage(); }\n    this.setState({ password: value });\n  }\n\n  onPasswordConfirmChange(value: string): void {\n    const { errorMessage } = this.state;\n    if (errorMessage) { this.clearErrorMessage(); }\n    this.setState({ passwordConfirm: value });\n  }\n\n  validatePasswordMatch(passwordOne: string, passwordTwo: string): boolean {\n    if (passwordOne !== passwordTwo) { return false; }\n    return true;\n  }\n\n  validatePasswordLength(password: string): boolean {\n    if (password.length < 5) { return false; }\n    return true;\n  }\n\n  validateInputs(email: string, password: string, passwordConfirm: string) {\n    if (!email || !password || !passwordConfirm) {\n      return UNFILLED_FIELDS_ERROR;\n    } else if (!validateEmail(email)) {\n      return INVALID_EMAIL_ERROR;\n    } else if (!this.validatePasswordMatch(password, passwordConfirm)) {\n      return PASS_MISMATCH_ERROR;\n    } else if (!this.validatePasswordLength(password)) {\n      return PASS_LENGTH_ERROR;\n    }\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n\n    return (\n      <Layout title={'Register'}>\n        <Mutation mutation={REGISTER_MUTATION} onError={() => {}}>\n          {(register: any, { loading, error }: any) => {\n            if (loading) { return <LoadingBar />; }\n\n            if (error) { console.log(\"err\", error.graphQLErrors[0].message); }\n\n            return (\n              <Fragment>\n                {error ? (\n                  <Alert message={error.graphQLErrors[0].message} />\n                ) : null}\n                {errorMessage ? <Alert message={errorMessage} /> : null}\n                <div>Register</div>\n                <div className=\"row d-flex justify-content-center\">\n                  <form\n                    className=\"d-flex flex-column col-10 col-sm-6 col-md-4\"\n                    onSubmit={this.handleSubmit.bind(this, register)}\n                  >\n                    <InputField\n                      labelTitle={'Email'}\n                      placeholderTitle={'Enter your email'}\n                      onTextChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        this.onEmailChange(e.target.value)\n                      }\n                    />\n                    <InputField\n                      labelTitle={'Password'}\n                      type=\"password\"\n                      placeholderTitle={'Enter your password'}\n                      onTextChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        this.onPasswordChange(e.target.value)\n                      }\n                    />\n                    <InputField\n                      labelTitle={'Confirm password'}\n                      type=\"password\"\n                      placeholderTitle={'Repeat your password'}\n                      onTextChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        this.onPasswordConfirmChange(e.target.value)\n                      }\n                    />\n                    <ButtonPrimary title={'Sign Up'} />\n                  </form>\n                </div>\n              </Fragment>\n            );\n          }}\n        </Mutation>\n      </Layout>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}