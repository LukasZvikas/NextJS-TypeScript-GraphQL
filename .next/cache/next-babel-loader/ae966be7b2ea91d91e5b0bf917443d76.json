{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/components/WithAuth.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query {\\n                        getUser {\\n                            _id\\n                            email\\n                        }\\n                    }\\n            \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport redirect from '../lib/redirect';\nexport var withAuth = function withAuth(C) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(IsAuth, _Component);\n\n      function IsAuth() {\n        _classCallCheck(this, IsAuth);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(IsAuth).apply(this, arguments));\n      }\n\n      _createClass(IsAuth, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(C, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }));\n        }\n      }], [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(context) {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log('context'); // console.log('apollo', context.apolloClient);\n\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return context.apolloClient.query({\n                      query: gql(_templateObject())\n                    });\n\n                  case 4:\n                    response = _context.sent;\n                    return _context.abrupt(\"return\", {\n                      user: response.data.getUser\n                    });\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](1);\n                    redirect(context, '/');\n                    return _context.abrupt(\"return\", {});\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[1, 8]]);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      return IsAuth;\n    }(Component)\n  );\n};","map":{"version":3,"sources":["/Users/lukas/Documents/GitHub/nextjs-graphql-typescript/components/WithAuth.tsx"],"names":["React","Component","gql","redirect","withAuth","C","props","context","console","log","apolloClient","query","response","user","data","getUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAmBC,CAAnB,EAA4C;AAChE;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAuBa;AACL,iBAAO,oBAAC,CAAD,eAAO,KAAKC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AAzBL;AAAA;AAAA;AAAA;AAAA;AAAA,oDACiCC,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,oBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAFR,CAGQ;;AAHR;AAAA;AAAA,2BAMmCF,OAAO,CAACG,YAAR,CAAqBC,KAArB,CAA2B;AAC9CA,sBAAAA,KAAK,EAAET,GAAF;AADyC,qBAA3B,CANnC;;AAAA;AAMkBU,oBAAAA,QANlB;AAAA,qDAgBmB;AAAEC,sBAAAA,IAAI,EAAED,QAAQ,CAACE,IAAT,CAAcC;AAAtB,qBAhBnB;;AAAA;AAAA;AAAA;AAmBYZ,oBAAAA,QAAQ,CAACI,OAAD,EAAU,GAAV,CAAR;AAnBZ,qDAoBmB,EApBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAA4BN,SAA5B;AAAA;AA2BH,CA5BM","sourcesContent":["import React, { ComponentClass, Component } from 'react';\nimport gql from 'graphql-tag';\nimport redirect from '../lib/redirect';\n\nexport const withAuth = <T extends object>(C: ComponentClass<T>) => {\n    return class IsAuth extends Component<T> {\n        static async getInitialProps(context: any) {\n            console.log('context');\n            // console.log('apollo', context.apolloClient);\n\n            try {\n                const response = await context.apolloClient.query({\n                    query: gql`\n                    query {\n                        getUser {\n                            _id\n                            email\n                        }\n                    }\n            `\n                });\n                return { user: response.data.getUser }\n            }\n            catch (err) {\n                redirect(context, '/');\n                return {};\n            }\n        }\n        render() {\n            return <C {...this.props} />\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}